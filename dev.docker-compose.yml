version: "3"

services:
  # you-say-api:
  #   image: you-say-api-image:dev
  #   container_name: you-say-api-container
  #   build:
  #     context: .
  #     dockerfile: ./apps/backend/dev.Dockerfile
  #   volumes:
  #     - type: bind
  #       source: .
  #       target: /app
  #       volume:
  #         nocopy: true
  #   ports:
  #     - 3001:3001
  #   depends_on:
  #     you-say-api-db:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   networks:
  #     - you-say-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "node", "/app/apps/backend/healthcheck.js"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  you-say-api-db:
    image: mongo:4.4.14-rc0-focal
    container_name: you-say-api-mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    networks:
      - you-say-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/${MONGO_INITDB_DATABASE} --quiet
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  you-say-network:
    external: true
