version: "3"

services:
  fusionauth:
    image: fusionauth-image
    build:
      context: .
      dockerfile: ./deployment/fusionauth/Dockerfile
    container_name: fusionauth-container
    depends_on:
      fusionauth-db:
        condition: service_healthy
      mailcatcher:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://fusionauth-db:5432/fusionauth
      DATABASE_USERNAME: fusionauth # I could not change it -- BUT why? IDK
      DATABASE_PASSWORD: ${FUSIONAUTH_POSTGRESQL_PASSWORD}
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      FUSIONAUTH_APP_MEMORY: 512M
      FUSIONAUTH_APP_RUNTIME_MODE: ${FUSIONAUTH_APP_RUNTIME_MODE}
      FUSIONAUTH_APP_KICKSTART_FILE: /usr/local/fusionauth/kickstart.json # Could not create apiKey with terrafrom
    ports:
      - 9011:9011
    volumes:
      - ./deployment/fusionauth/kickstart.json:/usr/local/fusionauth/kickstart.json
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://0.0.0.0:9011/api/status"]
      interval: 5s
      timeout: 5s
      retries: 5

  fusionauth-db:
    image: postgres:12.14
    container_name: fusionauth-db-container
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      PGUSER: ${POSTGRES_USER} # healthcheck variable
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5

  mailcatcher:
    image: sj26/mailcatcher:v0.8.2
    container_name: mailcatcher-container
    ports:
      # - 1026:1025 since FusionAuth is talking directly to the container it can see the port, no need to export it!
      - 1081:1080
    healthcheck:
      test: wget -q -O /dev/null http://mailcatcher:1080/
      interval: 10s
      retries: 80
